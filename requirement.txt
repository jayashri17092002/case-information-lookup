# Python Dependencies for Court Lookup Application
# Last updated: August 2, 2025

## Core Framework Dependencies
flask>=3.1.1                    # Web framework for Python backend
flask-sqlalchemy>=3.1.1         # Database ORM for data persistence  
flask-limiter>=3.12             # Rate limiting middleware for API protection
werkzeug>=3.1.3                 # WSGI utility library (Flask dependency)

## Database Dependencies
psycopg2-binary>=2.9.10         # PostgreSQL database adapter for Python

## Web Scraping Dependencies
selenium>=4.34.2                # Browser automation for dynamic content scraping
beautifulsoup4>=4.13.4          # HTML parsing for data extraction
webdriver-manager>=4.0.2        # Automatic Chrome driver management
requests>=2.32.4                # HTTP client for API calls and web requests

## Environment Management
python-dotenv>=1.1.1            # Environment variable management

## Frontend Dependencies (CDN-based, no Python installation required)
# Bootstrap 5.3.0                - CSS framework via CDN
# FontAwesome 6.4.0              - Icon library via CDN
# Vanilla JavaScript              - Native browser APIs, no framework dependencies

## Audio/Accessibility Features
# Web Speech API                 - Built into modern browsers (no additional dependencies)
# Speech Synthesis               - Native browser functionality for audio CAPTCHA

## Recent Updates (August 2, 2025):
# - Enhanced CAPTCHA error handling to show immediate orange warning popups
# - Removed automatic CAPTCHA refresh on validation errors for better UX
# - Improved user control over CAPTCHA refresh timing
# - Fixed loading dialog behavior to only appear after successful CAPTCHA validation
# - Maintained same CAPTCHA until user manually refreshes or enters correctly

## Error Handling Features:
# - Case not found scenarios (test with: NOTFOUND/2024, MISSING/2023)
# - Invalid case format detection (test with: INVALID-FORMAT-123)
# - Wrong CAPTCHA immediate feedback with orange warning alerts
# - Network error handling with appropriate user notifications
# - Rate limiting protection (100 requests/minute, 10 searches/minute)

## Installation Notes:
# - All Python dependencies are automatically managed through pyproject.toml
# - Frontend assets are loaded via CDN (no local installation required)
# - Audio CAPTCHA uses native browser Web Speech API (no additional packages)
# - Chrome WebDriver is automatically managed by webdriver-manager
# - PostgreSQL database is provided by Replit environment

## Browser Compatibility for Audio Features:
# - Chrome/Chromium: Full support
# - Firefox: Full support
# - Safari: Full support  
# - Edge: Full support
# - Mobile browsers: Varies by device

## Testing Scenarios Available:
# 1. Successful case search: Use any normal case number format (e.g., "123/2024")
# 2. Case not found: Use case numbers containing "NOTFOUND" or "MISSING"
# 3. Invalid format: Use case numbers containing "INVALID" or non-standard formats
# 4. Wrong CAPTCHA: Enter incorrect CAPTCHA text to see orange warning popup
# 5. Audio accessibility: Click speaker icon or use Alt+A for audio CAPTCHA